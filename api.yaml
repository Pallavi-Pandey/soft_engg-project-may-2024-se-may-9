openapi: 3.0.0
info:
  title: Course API
  description: API for managing courses, weekly content, assignments, and related student interactions.
  version: 1.0.0

paths:
  /home/{user_id}:
    get:
      tags:
        - User
      summary: User Details
      description: Provides all the user specific details (student details, enrolled courses, completed courses, etc).
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: The ID of the student
      responses:
        '200':
          description: Dictionary containing user details
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                    description: The unique identifier of the user
                  name:
                    type: string
                    description: The name of the user
                  email:
                    type: string
                    description: The email address of the user
                  enrolled_courses:
                    type: array
                    items:
                      type: string
                    description: A list of course_ids the user is currently enrolled in
                  completed_courses:
                    type: array
                    items:
                      type: string
                    description: A list of course_ids the user has completed

  
  /course/{course_id}:
    get:
      tags:
        - Course Content
      summary: Get Course Data
      description: Dictionary containing Course specific data like List of week_ids, grades, etc.
      parameters:
        - in: path
          name: course_id
          schema:
            type: integer
          required: true
          description: The ID of the course

      responses:
        '200':
          description: An object containg course data
          content:
            application/json:
              schema:
                type: object
                properties:
                  course_id:
                    type: integer
                    description: The unique identifier of the user
                  course_title:
                    type: string
                    description: The name of the user
                  week_ids:
                    type: array
                    items:
                      type: string
                    description: A list of week_ids for the course
                  

  /course/{course_id}/{week_id}:
    get:
      summary: Get Weekly Content
      description: Returns a list of video IDs for a specific week of a course.
      tags:
        - Weekly Content
      parameters:
        - in: path
          name: course_id
          schema:
            type: integer
          required: true
          description: The ID of the course
        - in: path
          name: week_id
          schema:
            type: integer
          required: true
          description: The ID of the week
      responses:
        '200':
          description: A list of video IDs
          content:
            application/json:
              schema:
                type: object
                properties:
                  video_ids:
                    type: array
                    items:
                      type: object
                      properties:
                        topic_tag:
                          type: string
                          example: link for video
                  assignments:
                    type: array
                    items:
                      type: object
                      properties:
                        assignment_id:
                          type: string
                          example: Assignment Name
                  grades:
                    type: object
                    properties:
                      assignment_id:
                        type: integer

  /course_assignment/{course_id}/{week_id}/{assignment_id}:
    get:
      summary: Get Weekly Assignment
      description: Returns data for a specific assignment.
      tags:
        - Weekly Assignment
      parameters:
        - in: path
          name: course_id
          schema:
            type: integer
          required: true
          description: The ID of the course
        - in: path
          name: week_id
          schema:
            type: integer
          required: true
          description: The ID of the week
        - in: path
          name: assignment_id
          schema:
            type: integer
          required: true
          description: The ID of the assigment
      responses:
        '200':
          description: Data for assignments
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
                  properties:
                    question_id:
                      type: string
                      example: Question 1
                    options:
                      type: array
                      items:
                        type: string
                        example: Option 1
                    answer:
                      type: string
                      example: Answer 1
                    

  /course_assignment/{week_id}/{assignment_id}:
    put:
      summary: Submit Assignment Answers
      description: Submits answers for a specific assignment.
      tags:
        - Weekly Assignment
      parameters:
        - in: path
          name: week_id
          schema:
            type: integer
          required: true
          description: The ID of the week
        - in: path
          name: assignment_id
          schema:
            type: integer
          required: true
          description: The ID of the assignment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Answers submitted
          content:
            application/json:
              schema:
                type: string
                example: "Assignment Submitted"
                

  /answers/{course_id}/{week_id}/{assignment_id}:
    get:
      summary: Get Answers submitted by Studen
      description: Returns a dictionary with questions and answers submitted by the student.
      tags:
        - Assignment Answers
      parameters:
        - in: path
          name: course_id
          schema:
            type: integer
          required: true
          description: The ID of the course
        - in: path
          name: week_id
          schema:
            type: integer
          required: true
          description: The ID of the week
        - in: path
          name: assignment_id
          schema:
            type: integer
          required: true
          description: The ID of the assigment
      responses:
        '200':
          description: Student answers for the assignment
          content:
            application/json:
              schema:
                type: object
                properties:
                    question_id:
                      type: string
                      example: Student selected answer
                    

  /summary/course/{course_id}:
    get:
      summary: Get Course Summary since Last Logged In
      description: Proivded an AI-generated summary of the lecutres of a course since the user last logged in.
      tags:
        - Summary
      parameters:
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true
        - in: path
          name: course_id
          schema:
            type: integer
          required: true
          description: The ID of the course
      responses:
        '200':
          description: AI-generated summary of the week
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - This is the summary of Module 1 of Week-1.
                - This is the summary of Module 2 of Week-2.
        '404':
          description: No Course/Week/Module/Transcript found for the Course.
        '500':
          description: Something went Wrong
                
  /summary/week/{week_id}:  
    get:
      summary: Get Weekly Summary
      description: Provides an AI-generated summary of a week.
      tags:
        - Summary
      parameters:
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true
        - in: path
          name: week_id
          schema:
            type: integer
          required: true
          description: The ID of the week
      responses:
        '200':
          description: AI-generated summary of the week
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
                - This is the summary of Module 1.
                - This is the summary of Module 2.
        '404':
          description: No Week/Module/Transcript found for the week.
        '500':
          description: Something went Wrong

  /summary/module/{content_id}:
    get:
      summary: Get Lecture Summary
      description: Provides an AI-generated summary of a specific lecture.
      tags:
        - Summary
      parameters:
        - in: header
          name: Authentication-Token
          schema:
            type: string
          required: true
        - in: path
          name: content_id
          schema:
            type: integer
          required: true
          description: The ID of the video
      responses:
        '200':
          description: AI-generated summary of the lecture
          content:
            application/json:
              schema:
                type: string
                example: This is a summary of video lecture 1
        '404':
          description: For the specified cotnent_id either the module or the transcript of the module does not exist.
        '500':
          description: Something went Wrong

  /mock_assignment/{course_id}/{week_id}/{assignment_type}:
    get:
      summary: Get Weekly Mock Questions
      description: Generates either programming or theoretical mock questions for a week.
      tags:
        - Mock Assignment
      parameters:
        - in: path
          name: course_id
          schema:
            type: integer
          required: true
          description: The ID of the course
        - in: path
          name: week_id
          schema:
            type: integer
          required: true
          description: The ID of the week
        - in: path
          name: assignment_type
          schema:
            type: string
            example: theoretical/programming
          required: true
          description: The type of assignment question which is to be generated
        
      responses:
        '200':
          description: AI-generated mock questions for the week
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    question_text:
                      type: string
                    options:
                      type: array
                      items:
                        type: string
                   
                   
  /mock_assignment/{course_id}:
    get:
      summary: Get Course Mock Questions
      description: Generates mock questions for the whole course.
      tags:
        - Mock Assignment
      parameters:
        - in: path
          name: course_id
          schema:
            type: integer
          required: true
          description: The ID of the course
      responses:
        '200':
          description: AI-generated mock questions for the course
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    question_text:
                      type: string
                    options:
                      type: array
                      items:
                        type: string
                    

  /mock_assignment:
    post:
      summary: Get Mock Questions for Multiple Courses/Weeks/Topics
      description: Generates mock questions for multiple courses or weeks or topics.
      tags:
        - Mock Assignment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                course_ids:
                  type: array
                  items:
                    type: integer
                week_ids:
                  type: array
                  items:
                    type: integer
                topics:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: AI-generated mock questions for the specified courses
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    question_text:
                      type: string
                    options:
                      type: array
                      items:
                        type: string
                        
                        
  /mock_assignment/{question_id}:
    delete:
      summary: Delete a question
      description: Deletes a question from the database.
      tags:
        - Mock Assignment
      parameters:
        - in: path
          name: question_id
          schema:
            type: integer
          required: true
          description: The ID of the question
      responses:
        '200':
          description: Delete confirmation
          content:
            application/json:
              schema:
                type: string
                example: Question Deleted                        
                        

  /weak_concepts/{course_id}:
    get:
      summary: Get Weak Concepts
      description: Lists topics where the student hasn't performed well.
      tags:
        - Weak Concepts
      parameters:
        - in: path
          name: course_id
          schema:
            type: integer
          required: true
          description: The ID of the course
      responses:
        '200':
          description: List of topics of weak concepts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: topics

  /prog_hint/{course_id}/{week_id}/{assignment_id}/{question_id}:
    post:
      summary: Get Programming Hints
      description: Provides hints based on the user's submitted code.
      tags:
        - Programming Assistant
      parameters:
        - in: path
          name: course_id
          schema:
            type: integer
          required: true
          description: The ID of the course
        - in: path
          name: week_id
          schema:
            type: integer
          required: true
          description: The ID of the week
        - in: path
          name: assignment_id
          schema:
            type: integer
          required: true
          description: The ID of the assignment
        - in: path
          name: question_id
          schema:
            type: integer
          required: true
          description: The ID of the question
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
      responses:
        '200':
          description: Hints based on the submitted code
          content:
            application/json:
              schema:
                type: string
                example: Hint to solve question/rectify error

  /alter_sol/{course_id}/{week_id}/{assignment_id}/{question_id}:
    get:
      summary: Get Alternative Solutions
      description: Provides AI-generated alternative solutions for a programming assignment.
      tags:
        - Programming Assistant
      parameters:
        - in: path
          name: course_id
          schema:
            type: integer
          required: true
          description: The ID of the course
        - in: path
          name: week_id
          schema:
            type: integer
          required: true
          description: The ID of the week
        - in: path
          name: assignment_id
          schema:
            type: integer
          required: true
          description: The ID of the assignment
        - in: path
          name: question_id
          schema:
            type: integer
          required: true
          description: The ID of the question
      responses:
        '200':
          description: AI-generated alternative solutions
          content:
            application/json:
              schema:
                type: string
                example: Alternative Solution
